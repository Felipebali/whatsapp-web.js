'use strict';

const { Client, LocalAuth } = require('./index.js'); // tu librerÃ­a
const qrcode = require('qrcode-terminal');
const readline = require('readline');

// Crear cliente con LocalAuth
const client = new Client({
    authStrategy: new LocalAuth(),
    puppeteer: { headless: true } // Puppeteer no se usarÃ¡ en Termux
});

// Evento: cliente listo
client.on('ready', async () => {
    console.log('âœ… Bot conectado a WhatsApp!');

    // Si no estÃ¡ registrado, pedimos cÃ³digo de emparejamiento
    if(!client.info) {
        const phoneNumber = '59898719147'; // tu nÃºmero de WhatsApp sin + ni espacios
        console.log(`Generando cÃ³digo de emparejamiento para: ${phoneNumber}...`);

        const code = await client.getPairingCode(phoneNumber);
        const formattedCode = code.match(/.{1,4}/g).join('-');
        console.log(`ğŸ“Œ Tu cÃ³digo de vinculaciÃ³n: ${formattedCode}`);
        console.log('Pega este cÃ³digo en WhatsApp â†’ Dispositivos vinculados â†’ Vincular un dispositivo â†’ Usar cÃ³digo de emparejamiento');
    }
});

// Evento: mensajes entrantes
client.on('message', async message => {
    console.log(`Mensaje de ${message.from}: ${message.body}`);

    // Comando de prueba
    if(message.body === '!ping') {
        message.reply('pong');
    }

    // Comando .menu
    if(message.body === '.menu') {
        message.reply(
`ğŸ“œ *Comandos disponibles:*
!ping - Responde pong
.menu - Muestra este menÃº`
        );
    }
});

// Inicializar el cliente
client.initialize();
